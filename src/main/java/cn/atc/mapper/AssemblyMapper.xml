<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.atc.mapper.AssemblyMapper">
  <resultMap id="BaseResultMap" type="cn.atc.pojo.Assembly">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="productiveTaskId" jdbcType="VARCHAR" property="productiveTaskId" />
    <result column="assemblyPeople" jdbcType="BIGINT" property="assemblyPeople" />
    <result column="realQuantity" jdbcType="BIGINT" property="realQuantity" />
    <result column="finishTime" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <resultMap id="WithAssemblyPeopleMap" type="cn.atc.pojo.Assembly">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="productiveTaskId" jdbcType="VARCHAR" property="productiveTaskId" />
    <result column="assemblyPeople" jdbcType="BIGINT" property="assemblyPeople" />
    <result column="realQuantity" jdbcType="BIGINT" property="realQuantity" />
    <result column="finishTime" jdbcType="TIMESTAMP" property="finishTime" />
    <association property="assemblyPeopleEntity" javaType="cn.atc.pojo.Employee">
      <id column="id" jdbcType="BIGINT" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="phone" jdbcType="VARCHAR" property="phone" />
      <result column="gender" jdbcType="VARCHAR" property="gender" />
      <result column="cardId" jdbcType="VARCHAR" property="cardId" />
      <result column="address" jdbcType="VARCHAR" property="address" />
      <result column="deptChildId" jdbcType="BIGINT" property="deptChildId" />
    </association>
  </resultMap>
  <resultMap id="AssemblyPeopleMap" type="cn.atc.pojo.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="cardId" jdbcType="VARCHAR" property="cardId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="deptChildId" jdbcType="BIGINT" property="deptChildId" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, productiveTaskId, assemblyPeople, realQuantity, finishTime
  </sql>
  <select id="selectByExample" parameterType="cn.atc.pojo.AssemblyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from assembly
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from assembly
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAllWithAssemblyPeople" resultMap="WithAssemblyPeopleMap">
    SELECT * FROM assembly a
    LEFT JOIN employee e
    ON a.assemblyPeople=e.id
  </select>
  <select id="selectAllWithAssemblyPeopleByPer" resultMap="WithAssemblyPeopleMap">
    SELECT * FROM assembly a
    LEFT JOIN employee e
    ON a.assemblyPeople=e.id
    WHERE e.`name` LIKE CONCAT('%',#{per},'%')
  </select>
<select id="selectAllWithAssemblyPeopleById" parameterType="java.lang.Long" resultMap="WithAssemblyPeopleMap">
  SELECT * FROM assembly a
    LEFT JOIN employee e
    ON a.id=e.id
    WHERE a.id = #{id,jdbcType=BIGINT}
</select>
  <select id="selectAllAssemblyPeople" resultMap="AssemblyPeopleMap">
    SELECT * FROM employee
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from assembly
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.atc.pojo.AssemblyExample">
    delete from assembly
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.atc.pojo.Assembly">
    insert into assembly (id, productiveTaskId, assemblyPeople, 
      realQuantity, finishTime)
    values (#{id,jdbcType=BIGINT}, #{productiveTaskId,jdbcType=VARCHAR}, #{assemblyPeople,jdbcType=BIGINT}, 
      #{realQuantity,jdbcType=BIGINT}, #{finishTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.atc.pojo.Assembly">
    insert into assembly
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productiveTaskId != null">
        productiveTaskId,
      </if>
      <if test="assemblyPeople != null">
        assemblyPeople,
      </if>
      <if test="realQuantity != null">
        realQuantity,
      </if>
      <if test="finishTime != null">
        finishTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productiveTaskId != null">
        #{productiveTaskId,jdbcType=VARCHAR},
      </if>
      <if test="assemblyPeople != null">
        #{assemblyPeople,jdbcType=BIGINT},
      </if>
      <if test="realQuantity != null">
        #{realQuantity,jdbcType=BIGINT},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.atc.pojo.AssemblyExample" resultType="java.lang.Long">
    select count(*) from assembly
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update assembly
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productiveTaskId != null">
        productiveTaskId = #{record.productiveTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.assemblyPeople != null">
        assemblyPeople = #{record.assemblyPeople,jdbcType=BIGINT},
      </if>
      <if test="record.realQuantity != null">
        realQuantity = #{record.realQuantity,jdbcType=BIGINT},
      </if>
      <if test="record.finishTime != null">
        finishTime = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update assembly
    set id = #{record.id,jdbcType=BIGINT},
      productiveTaskId = #{record.productiveTaskId,jdbcType=VARCHAR},
      assemblyPeople = #{record.assemblyPeople,jdbcType=BIGINT},
      realQuantity = #{record.realQuantity,jdbcType=BIGINT},
      finishTime = #{record.finishTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.atc.pojo.Assembly">
    update assembly
    <set>
      <if test="productiveTaskId != null">
        productiveTaskId = #{productiveTaskId,jdbcType=VARCHAR},
      </if>
      <if test="assemblyPeople != null">
        assemblyPeople = #{assemblyPeople,jdbcType=BIGINT},
      </if>
      <if test="realQuantity != null">
        realQuantity = #{realQuantity,jdbcType=BIGINT},
      </if>
      <if test="finishTime != null">
        finishTime = #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.atc.pojo.Assembly">
    update assembly
    set productiveTaskId = #{productiveTaskId,jdbcType=VARCHAR},
      assemblyPeople = #{assemblyPeople,jdbcType=BIGINT},
      realQuantity = #{realQuantity,jdbcType=BIGINT},
      finishTime = #{finishTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>