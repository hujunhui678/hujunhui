<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.atc.mapper.PartFormulaMapper">

	<resultMap type="PartFormula" id="partform">
		<id column="id" property="id" />
		<result column="formulaName" property="formulaName" />
		<result column="createTime" property="createTime" />
		<result column="state" property="state" />
		<association property="finishedProductsType"
			javaType="FinishedProductsType">
			<result column="productName" property="productName" />
		</association>
		<association property="admin" javaType="Admin">
			<result column="name" property="name" />
		</association>
		<collection property="partFormulaDesc"
			ofType="PartFormulaDesc">
			<result column="requirement" property="requirement" />
			<result column="partTypeId" property="partTypeId" />
		</collection>
		<collection property="partType" ofType="PartType">
			<id column="pid" property="id" />
			<result column="partType" property="partType" />
			<result column="partClassId" property="partClassId" />
		</collection>
		<collection property="partClassify" ofType="PartClassify">
			<result column="partName" property="partName" />
		</collection>
	</resultMap>

	<select id="getAllPartFrom" parameterType="map"
		resultMap="partform">
		SELECT
		pf.`id`,pf.`formulaName`,pf.`createTime`,pf.state,pty.`id`
		pid,pty.`partType`,
		pty.`partClassId`,pc.`partName`,pfd.`requirement`,pfd.`partTypeId`,
		fin.`productName`,admin.`name` FROM partformuladesc pfd
		left JOIN
		partformula pf
		ON pf.`id` = pfd.`partformulaId`
		left JOIN
		finishedproductstype fin
		ON
		pfd.`finishedProductsTypeId` = fin.`id`
		left
		JOIN parttype pty
		ON
		pfd.`partTypeId` = pty.`id`
		left JOIN partclassify
		pc
		ON pty.`partClassId` =
		pc.`id`
		left JOIN admin
		ON pf.`compilers` =
		admin.`id`
		<trim prefix="where" prefixOverrides="and">
			<if test="id != null and id != ''">
				pf.id = #{id}
			</if>
			<if test="productName != null and productName != ''">
				and fin.`productName` like concat('%',#{productName},'%')
			</if>
			<if test="createTime != null and createTime != ''">
				and pf.`createTime` like concat(#{createTime},'%')
			</if>
			<if test="state != null and state != ''">
				and state = 0
			</if>
		</trim>
		<if test="id == null or id == ''">
			GROUP BY pf.id
			limit
			#{startRow},#{pageSize}
		</if>
	</select>

	<select id="count" parameterType="map" resultType="integer">
		SELECT
		COUNT(1) FROM (
		SELECT
		COUNT(1) FROM partformuladesc pfd
		LEFT JOIN
		partformula pf
		ON pf.`id` =
		pfd.`partformulaId`
		LEFT JOIN
		finishedproductstype fin
		ON
		pfd.`finishedProductsTypeId` = fin.`id`
		LEFT
		JOIN parttype pty
		ON
		pfd.`partTypeId` = pty.`id`
		LEFT JOIN partclassify
		pc
		ON
		pty.`partClassId` =
		pc.`id`
		LEFT JOIN admin
		ON pf.`compilers` =
		admin.`id`
		<trim prefix="where" prefixOverrides="and">
			<if test="productName != null and productName != ''">
				fin.`productName` like concat('%',#{productName},'%')
			</if>
			<if test="createTime != null and createTime != ''">
				and pf.`createTime` like concat(#{createTime},'%')
			</if>
		</trim>
		GROUP BY pf.id
		)part
	</select>


	<select id="getAllFinish" resultType="FinishedProductsType">
		SELECT
		fp.`id`,fp.`productName`,fp.`productType` FROM `partformuladesc` pd
		LEFT JOIN `partformula` pf
		ON pd.`partformulaId` = pf.`id`
		LEFT JOIN
		`finishedproductstype` fp
		ON pd.`finishedProductsTypeId` = fp.`id`
		WHERE pf.`state` = 0
		GROUP BY fp.`id`
	</select>

	<select id="getPartType" parameterType="integer"
		resultType="PartType">
		SELECT * FROM parttype
		WHERE id =#{id}
	</select>

	<insert id="addPartType" parameterType="PartType"
		useGeneratedKeys="true" keyProperty="id">
		insert into parttype(partType,
		partClassId) values(#{partType},#{partClassId})
	</insert>

	<insert id="addPartFormula" parameterType="PartFormula"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		partformula(formulaName,compilers,createTime)
		values(#{formulaName},#{compilers},#{createTime})
	</insert>
	<insert id="addPartFormulaDesc" parameterType="PartFormulaDesc">
		insert into
		partformuladesc(finishedProductsTypeId,partTypeId,requirement,partformulaId)
		values(#{finishedProductsTypeId},#{partTypeId},#{requirement},#{partformulaId})
	</insert>

	<update id="editState" parameterType="map">
		update partformula
		<set>
			<trim suffixOverrides=",">
				<if test="state != null">
					state = #{state},
				</if>
			</trim>
		</set>
		<where>
			id = #{id}
		</where>
	</update>
	<select id="getPFByid" parameterType="string" resultType="PartFormula">
		SELECT
		pf.`id`,pf.`formulaName` FROM `partformuladesc` pd
		LEFT JOIN
		`partformula` pf
		ON pd.`partformulaId` = pf.`id`
		LEFT JOIN
		`finishedproductstype` fp
		ON pd.`finishedProductsTypeId` = fp.`id`
		WHERE fp.`id` = #{id}
		GROUP BY pf.`id`
	</select>
</mapper>
