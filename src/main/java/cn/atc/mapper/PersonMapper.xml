<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.atc.mapper.PersonMapper">

	<resultMap type="Admin" id="adminAndChildDept">
		<id column="a_id" property="id" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<association property="childdept" javaType="ChildDept">
			<result column="childName" property="childName" />
		</association>
	</resultMap>

	<select id="getAllAdmin" parameterType="map"
		resultMap="adminAndChildDept">
		SELECT
		a.`id`
		a_id,a.`name`,a.`phone`,c.`childName` FROM
		childdept c JOIN admin a
		WHERE c.`id` = a.`deptChildId`
		limit
		#{startRow},#{pageSize}
	</select>

	<resultMap type="Employee" id="empAndChildDept">
		<id column="e_id" property="id" />
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<association property="childdept" javaType="ChildDept">
			<result column="childName" property="childName" />
		</association>
	</resultMap>

	<select id="getAllEmp" parameterType="map"
		resultMap="empAndChildDept">
		SELECT
		e.`id`
		e_id,e.`name`,e.`phone`,c.`childName` FROM
		childdept c JOIN employee e
		WHERE c.`id` = e.`deptChildId`
		limit
		#{startRow},#{pageSize}
	</select>


	<select id="getAdminToCount" resultType="integer">
		SELECT count(1) FROM
		childdept c JOIN admin a
		WHERE c.`id` = a.`deptChildId`
	</select>

	<select id="getEmpToCount" resultType="integer">
		SELECT count(1) FROM
		childdept c JOIN employee e
		WHERE c.`id` = e.`deptChildId`
	</select>

	<select id="getAdminPhone" parameterType="string"
		resultType="integer">
		SELECT COUNT(1) FROM admin a WHERE a.phone = #{phone}
	</select>

	<insert id="addAdmin" parameterType="Admin">
		INSERT INTO
		admin(NAME,loginName,PASSWORD,gender,phone,cardId,deptChildId)
		VALUES(#{name},#{loginName},#{password},#{gender},#{phone},#{cardId},#{deptChildId})
	</insert>
	<insert id="addEmp" parameterType="Employee">
		INSERT INTO
		employee(NAME,gender,phone,cardId,address,deptChildId)
		VALUES(#{name},#{gender},#{phone},#{cardId},#{address},#{deptChildId})
	</insert>

	<select id="getAdminIdByPhone" parameterType="string"
		resultType="integer">
		SELECT id FROM admin WHERE phone = #{phone}
	</select>
	<resultMap type="Admin" id="getNameAndChi">
		<result column="name" property="name" />
		<association property="childdept" javaType="ChildDept">
			<id column="id" property="id" />
			<result column="childName" property="childName" />
		</association>
	</resultMap>

	<select id="getAdminNameAndChildDept" parameterType="integer"
		resultMap="getNameAndChi">
		SELECT a.`name`,c.`id`,c.`childName` FROM admin a JOIN
		childdept c ON a.`deptChildId` = c.`id`
		WHERE a.`id` = #{id}
	</select>


	<resultMap type="Employee" id="getEmpAndChi">
		<result column="name" property="name" />
		<result column="phone" property="phone" />
		<result column="address" property="address" />
		<association property="childdept" javaType="ChildDept">
			<id column="id" property="id" />
			<result column="childName" property="childName" />
		</association>
	</resultMap>

	<select id="getEmpAndChildDept" parameterType="integer"
		resultMap="getEmpAndChi">
		SELECT en.`name`,en.`phone`,en.`address`,c.`id`,c.`childName` FROM employee
		en
		JOIN childdept c ON en.`deptChildId` = c.`id`
		WHERE en.`id` = #{id}
	</select>

	<select id="getAdminAllRole" parameterType="integer"
		resultType="Admin_Role">
		SELECT r.roleId FROM admin_role r WHERE r.`adminId` = #{id}
	</select>

	<update id="updateAdmin" parameterType="Admin">
		update admin
		<set>
			<trim suffixOverrides=",">
				<if test="name != null and name != ''">
					name = #{name},
				</if>
				<if test="deptChildId != null and deptChildId != ''">
					deptChildId = #{deptChildId},
				</if>
			</trim>
		</set>
		<where>
			id = #{id}
		</where>
	</update>

	<update id="updateEmp" parameterType="Employee">
		update Employee
		<set>
			<trim suffixOverrides=",">
				<if test="name != null and name != ''">
					name = #{name},
				</if>
				<if test="phone != null and phone != ''">
					phone = #{phone},
				</if>
				<if test="address != null and address != ''">
					address = #{address},
				</if>
				<if test="deptChildId != null and deptChildId != ''">
					deptChildId = #{deptChildId},
				</if>
			</trim>
		</set>
		<where>
			id = #{id}
		</where>
	</update>

	<delete id="delAdminRole" parameterType="integer">
		delete from admin_role
		where adminId = #{adminId}
	</delete>


	<delete id="delAdmin" parameterType="string">
		DELETE FROM Admin WHERE id in
		<foreach collection="adminIds" item="ids" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<delete id="delEmp" parameterType="string">
		DELETE FROM employee WHERE id in
		<foreach collection="empIds" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>

</mapper>
